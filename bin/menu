#!/usr/bin/env python3

import argparse
import os
import re
import subprocess
import sys


def run_menu(*, mode, directory, regex):
    """do the actual menu run and get the chosen item"""
    if not directory.endswith("/"):
        directory += "/"

    items = subprocess.Popen(
        ["find", directory, "-regex", regex],
        universal_newlines=True,
        stdout=subprocess.PIPE,
    )

    fixed_items = subprocess.Popen(
        ["sed", f"s|{regex}/||"],
        universal_newlines=True,
        stdout=subprocess.PIPE,
        stdin=items.stdout,
    )

    choice = subprocess.Popen(
        ["rofi", "-dmenu"],
        encoding="UTF-8",
        stdout=subprocess.PIPE,
        stdin=fixed_items.stdout,
    )

    choice_stdout, _ = choice.communicate()

    if choice_stdout is None or choice_stdout.strip() == "":
        print("No choice! Exiting...")
        sys.exit(1)

    return choice_stdout.strip()


def choose(*, mode, directory):
    """handle stuff around menu choice and run menu"""

    if mode == "pass":
        if directory is None:
            directory = subprocess.run(
                ["xdg-user-dir", "PASS"],
                stdout=subprocess.PIPE,
                encoding="UTF-8",
            ).stdout.strip()

        choice = run_menu(mode=mode, directory=directory, regex=".*\.\(gpg\)")

        trimmed_choice = re.sub(f"^{directory}", "", choice)
        trimmed_choice = re.sub("\.gpg$", "", trimmed_choice)

        subprocess.run([
            "pass",
            "show",
            "-c", trimmed_choice,
        ])

    elif mode == "vid":
        if directory is None:
            directory = subprocess.run(
                ["xdg-user-dir", "VIDEOS"],
                stdout=subprocess.PIPE,
                encoding="UTF-8",
            ).stdout.strip()

        choice = run_menu(mode=mode, directory=directory, regex=".*\.\(mkv\|mp4\|avi\|vob\)")

        full_path = os.path.join(directory, choice)
        subprocess.run(["mpv", full_path])

    elif mode == "music":
        if directory is None:
            directory = subprocess.run(
                ["xdg-user-dir", "MUSIC"],
                stdout=subprocess.PIPE,
                encoding="UTF-8",
            ).stdout.strip()


        full_directory = os.path.join(directory, "playlists")

        choice = run_menu(mode=mode, directory=full_directory, regex=".*\.\(m3u\)")

        trimmed_choice = re.sub(f"^{full_directory}/", "", choice)
        trimmed_choice = re.sub("\.m3u$", "", trimmed_choice)

        subprocess.run(["mpc", "clear"], stdout=subprocess.DEVNULL)
        subprocess.run(["mpc", "load", trimmed_choice], stdout=subprocess.DEVNULL)
        subprocess.run(["mpc", "play"], stdout=subprocess.DEVNULL)

    else:
        print(f"mode {mode} is unsupported!")
        sys.exit(1)


def main():
    """main program"""

    parser = argparse.ArgumentParser(
        description="choose items from a menu",
    )

    parser.add_argument(
        "MODE",
        help=(
            "mode menu should run in. options are: "
            "pass (get password from pass password manager), "
            "vid (play movies with mpv), "
            "music (add playlists to mpd)"
        ),
        type=str,
    )
    parser.add_argument(
        "--directory",
        help=(
            "directory to be used for command. default depends on mode. "
            "pass: xdg-user-dir PASS "
            "music: xdg-user-dir MUSIC "
            "vid: xdg-user-dir VIDEOS "
        ),
        type=str,
        default=None,
    )

    args = parser.parse_args()
    choose(mode=args.MODE, directory=args.directory)


if __name__ == "__main__":
    main()
