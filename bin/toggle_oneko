#!/usr/bin/env python3

import argparse
import os
import subprocess

def run(*, pidfile):
    """run oneko kill or respawn"""

    oneko_cmd = ["oneko", "-tofocus", "-speed", "32"]
    cleanup_cmd = ["xsetroot", "-cursor_name", "left_ptr"]

    if pidfile is None:
        uid = os.getuid()

        pidfile = os.path.join(
            os.sep,
            "var",
            "run",
            "user",
            f"{uid}",
            "oneko",
            "oneko.pid",
        )

    piddir = os.path.dirname(pidfile)

    if not os.path.isdir(piddir):
        os.makedirs(piddir)

    # existence of pidfile indicates running processs, so we kill it
    # the other branch indicates there's no running process, so we start it.
    if os.path.isfile(pidfile):
        with open(pidfile, "r") as f:
            oneko_pid = f.read().strip()

        os.remove(pidfile)

        subprocess.run(["kill", oneko_pid])
        subprocess.run(cleanup_cmd)

    else:
        oneko_pid = subprocess.Popen(oneko_cmd).pid

        with open(pidfile, "w") as f:
            f.write(f"{oneko_pid}")

def main():
    parser = argparse.ArgumentParser(
        description="toggle cute cat oneko",
    )

    parser.add_argument(
        "--pidfile",
        help=(
            "location of pidfile to use. "
            "by default, will attempt to use "
            "/var/run/user/$UID/oneko/oneko.pid"
        ),
        default=None,
    )

    args = parser.parse_args()

    run(pidfile=args.pidfile)

if __name__ == "__main__":
    main()
